Steps to set up Sequelize and typescript
1. npm install sequelize sequelize-cli typescript ts-node @types/express @types/node @types/sequelize pg express node zod 
2. npm i -g typescript
3. npx tsc --init // to initialize tsconfig.json
4. npx sequelize init 
5. generate the users model using 
    - npm run model:generate UserModel --attributes username:string
    - npm run model:generate TagModel --attributes  name:string
    - npm run model:generate CommentModel --attributes content:string
    - npm run model:generate TaskModel --attributes title:string
    N/B: once its brought the file in .js change to .ts and use the import for es6 module
6. to drop existing tables use npx sequelize-cli db:migrate:undo:all
7. to check the statuus of the migration npx sequelize-cli db:migrate:status

STEPS TO RUN THE PROJECT
1. clone the project from github
2. configure your env file with your own configuration values as seen within the .env.sample file
3. run npm install -- to install all dependencies 
4. compile the project using npm run build
5. start the project with npm run dev
6. run npx sequelize-cli db:migrate:undo:all
7. run npx sequelize-cli db:migrate:status
8. run npx sequelize-cli db:migrate
9. 


SETTING UP REDIS
1. npm i @types/express @types/axios @types/cors @types/dotenv @types/redis
2. npm i express axios cors dotenv redis
3. touch ./redis.client.ts
4. set up the redis configuration in this file path above 
    - brew install redis
    - start server using redis-server
    - to check your password for the configuration use redis-cli CONFIG GET requirepass
    - set up your cinfiguration file without password if none


